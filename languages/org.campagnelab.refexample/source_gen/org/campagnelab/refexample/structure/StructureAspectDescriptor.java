package org.campagnelab.refexample.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptNavigateToNode = createDescriptorForNavigateToNode();
  /*package*/ final ConceptDescriptor myConceptRefTarget = createDescriptorForRefTarget();
  /*package*/ final ConceptDescriptor myConceptWithRef = createDescriptorForWithRef();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptNavigateToNode, myConceptRefTarget, myConceptWithRef);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.NavigateToNode:
        return myConceptNavigateToNode;
      case LanguageConceptSwitch.RefTarget:
        return myConceptRefTarget;
      case LanguageConceptSwitch.WithRef:
        return myConceptWithRef;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForNavigateToNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.campagnelab.refexample", "NavigateToNode", 0x85d7c0cc4aa84799L, 0x8fbab6f80d065fa5L, 0x386faece7275f748L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:78e0e320-052f-4ecd-8caf-a4138af69c16(org.campagnelab.refexample.structure)/4066661190245676872");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRefTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.campagnelab.refexample", "RefTarget", 0x85d7c0cc4aa84799L, 0x8fbab6f80d065fa5L, 0x386faece7275f6beL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:78e0e320-052f-4ecd-8caf-a4138af69c16(org.campagnelab.refexample.structure)/4066661190245676734");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWithRef() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("org.campagnelab.refexample", "WithRef", 0x85d7c0cc4aa84799L, 0x8fbab6f80d065fa5L, 0x386faece7275f6bbL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:78e0e320-052f-4ecd-8caf-a4138af69c16(org.campagnelab.refexample.structure)/4066661190245676731");
    b.version(2);
    b.associate("ref", 0x386faece7275f6bcL).target(0x85d7c0cc4aa84799L, 0x8fbab6f80d065fa5L, 0x386faece7275f6beL).optional(true).origin("4066661190245676732").done();
    return b.create();
  }
}
